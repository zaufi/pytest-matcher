# SPDX-FileCopyrightText: 2024-now, Alex Turbov <zaufi@pm.me>
# SPDX-License-Identifier: CC0-1.0

name: Publish Python üêç distribution üì¶

on:
  push:
    branches:
      - stage/*
    tags:
      - release/*

env:
  CLICOLOR: 1
  CLICOLOR_FORCE: 1
  FORCE_COLOR: 1
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    if: github.repository == 'zaufi/pytest-matcher'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Get Cache Key
        shell: bash
        run: |
          echo "CACHE_KEY=$( \
              .github/workflows/get-key.py --hash tool.hatch.envs.default.dependencies \
            )" | tee -a "${GITHUB_ENV}"

      - name: Prepare Cache
        uses: actions/cache@v4
        with:
          key: py3.12-hatch-${{ env.CACHE_KEY }}-build
          path: |
            ~/.cache/pip
            ~/.cache/uv
            ~/.local/share/hatch

      - name: Install `hatch`
        uses: pypa/hatch@install

      - name: Git Describe
        id: ghd
        uses: proudust/gh-describe@v2
        env:
          CLICOLOR: 0
          CLICOLOR_FORCE: 0
          FORCE_COLOR: 0

        # NOTE It's not exactly the same as in the `linters.yaml` workflow!
        # This one strips _local version_!
      - name: Prepare Version
        shell: bash
        run: |
          echo "SETUPTOOLS_SCM_PRETEND_VERSION=$( \
              echo '${{ steps.ghd.outputs.describe }}' \
            | cut -d / -f 2 \
            | sed -e 's,-,.post,' -e 's,-g.*,,' \
            )" | tee -a "${GITHUB_ENV}"

      - name: Check the ChangeLog
        if: startsWith(github.ref, 'refs/tags/')
        run: .github/workflows/ChangeLog-quick-check.sh

      - name: Build a package
        run: hatch build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pytest-matcher
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@v1.9.0

  github-release:
    name: Sign the Python üêç distribution üì¶ with Sigstore and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        run: gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload artifact signatures to GitHub Release
        run: gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'
        env:
          GITHUB_TOKEN: ${{ github.token }}

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/pytest-matcher

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          repository-url: https://test.pypi.org/legacy/
